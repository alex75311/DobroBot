version: '3'
services:
  db:
    image: postgres:12.4
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ../pg_data:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_DB: dobrobot
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_USER: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
  dobro-ml:
    image: fogugy/dobro-ml
    container_name: dobro_ml
    command: sh -c "cd /usr/local/proj && python3 server.py"
    volumes:
      - ../dobro_ml:/usr/local/proj
    restart: always
  bot:
    image: python:3.8
    container_name: dobrobot
    volumes:
      - .:/DobroBot
    command: sh -c "cd /DobroBot/ && pip install -r requirements.txt && python3 models.py && sleep 30 && python3 parser.py && python3 dobrobot.py"
    environment:
      BOT_TOKEN: 06a8b8c187d859bc5f3dbb559d0c6172a90977cbcb2ab0c8e3d5b60edd1c3282fdeb873edb36b9058ea15
      USER_TOKEN: d56b5e4cb7bc9745fadfe490f8ab5f8bb5d38640497ba06d5682d52b0a77427f412dc7caa202a3d266ce3
      GROUP_ID: 198442398
      ALBOM_ID: 274632984
      API_APP: 0
      API_KEY: 0
      PREDICTOR_URL: http://dobro-ml:4444/
      DB_NAME: dobrobot
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword
      DB_IP: db
      DB_PORT: 5432
    links:
      - dobro-ml
      - db
    restart: always
  cronjobber:
    image: docker:edge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: cronjobber
    links:
      - bot
    command: sh -c "echo '0 */8 * * * docker exec dobrobot python /DobroBot/parser.py' > /etc/crontabs/root && crond -f"
